"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5978],{2422:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(8168),a=(n(6540),n(5680)),l=n(2714);const o={slug:"soulcrabber-cyberapocalypse-2021-ctf",title:"Soulcrabber - Cyberapocalypse 2021 CTF",description:"This is a writeup for the Soulcrabber challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Crypto.",authors:"kiroki",tags:["Cyber Security","CTF"]},i=void 0,p={permalink:"/blog/soulcrabber-cyberapocalypse-2021-ctf",source:"@site/blog/2021-04-27-15:35:53soulcrabber-cyberapocalypse-2021-ctf.md",title:"Soulcrabber - Cyberapocalypse 2021 CTF",description:"This is a writeup for the Soulcrabber challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Crypto.",date:"2021-04-27T00:00:00.000Z",formattedDate:"April 27, 2021",tags:[{label:"Cyber Security",permalink:"/blog/tags/cyber-security"},{label:"CTF",permalink:"/blog/tags/ctf"}],readingTime:2.615,hasTruncateMarker:!0,authors:[{name:"Kiril Panayotov Blagoev",title:"Admin",url:"https://github.com/tihawk",imageURL:"https://github.com/tihawk.png",key:"kiroki"}],frontMatter:{slug:"soulcrabber-cyberapocalypse-2021-ctf",title:"Soulcrabber - Cyberapocalypse 2021 CTF",description:"This is a writeup for the Soulcrabber challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Crypto.",authors:"kiroki",tags:["Cyber Security","CTF"]},prevItem:{title:"Emoji Voting - Cyberapocalypse 2021 CTF",permalink:"/blog/emoji-voting-cyberapocalypse-2021-ctf"},nextItem:{title:"Wild goose hunt - Cyberapocalypse 2021 CTF",permalink:"/blog/wild-goose-hunt-cyberapocalypse-2021-ctf"}},s={authorsImageUrls:[void 0]},c=[{value:"Propmpt",id:"propmpt",level:3},{value:"Recon",id:"recon",level:3},{value:"Solution",id:"solution",level:3}],u={toc:c},g="wrapper";function y(e){let{components:t,...n}=e;return(0,a.yg)(g,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This is a writeup for the Soulcrabber challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Crypto."),(0,a.yg)("h3",{id:"propmpt"},"Propmpt"),(0,a.yg)("p",null,"Aliens heard of this cool newer language called Rust, and hoped the safety it offers could be used to improve their stream cipher."),(0,a.yg)("h3",{id:"recon"},"Recon"),(0,a.yg)("p",null,"We get a Rust script which applies a seemingly random XOR cypher to a ",(0,a.yg)("inlineCode",{parentName:"p"},"flag.txt")," file, and outputs it in ",(0,a.yg)("em",{parentName:"p"},"hex")," to ",(0,a.yg)("inlineCode",{parentName:"p"},"out.txt"),". We also get the output file, so all we have to do is reverse the procedure."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'use rand::{Rng,SeedableRng};\nuse rand::rngs::StdRng;\nuse std::fs;\nuse std::io::Write;\n\nfn get_rng() -> StdRng {\n    let seed = 13371337;\n    return StdRng::seed_from_u64(seed);\n}\n\nfn rand_xor(input : String) -> String {\n    let mut rng = get_rng();\n    return input\n        .chars()\n        .into_iter()\n        .map(|c| format!("{:02x}", (c as u8 ^ rng.gen::<u8>())))\n        .collect::<Vec<String>>()\n        .join("");\n}\n\nfn main() -> std::io::Result<()> {\n    let flag = fs::read_to_string("flag.txt")?;\n    let xored = rand_xor(flag);\n    println!("{}", xored);\n    let mut file = fs::File::create("out.txt")?;\n    file.write(xored.as_bytes())?;\n    Ok(())\n}\n')),(0,a.yg)("p",null,"Sequence of events:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Open a file ",(0,a.yg)("inlineCode",{parentName:"li"},"flag.txt"),"."),(0,a.yg)("li",{parentName:"ol"},"Generate a random key for XOR by using the seed ",(0,a.yg)("inlineCode",{parentName:"li"},"13371337"),"."),(0,a.yg)("li",{parentName:"ol"},"XOR the contents of ",(0,a.yg)("inlineCode",{parentName:"li"},"flag.txt")," with the key."),(0,a.yg)("li",{parentName:"ol"},"Write out the result onto ",(0,a.yg)("inlineCode",{parentName:"li"},"out.txt"),".")),(0,a.yg)("p",null,"Although the code for XOR is generated by a random number generator, we immediately notice that the RNG is supplied with a known seed. This automatically means, that the numbers generated by it will follow the same sequence every time."),(0,a.yg)("p",null,"So all we have to do to reverse the process is to supply ",(0,a.yg)("inlineCode",{parentName:"p"},"out.txt")," as input (in hex) to the function, and we will get the original flag in hex as output."),(0,a.yg)("h3",{id:"solution"},"Solution"),(0,a.yg)("p",null,"Sequence:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Read the hex value contents of ",(0,a.yg)("inlineCode",{parentName:"li"},"out.txt"),"."),(0,a.yg)("li",{parentName:"ol"},"Generate the pseudo-random key by using the same seed."),(0,a.yg)("li",{parentName:"ol"},"XOR the contents of ",(0,a.yg)("inlineCode",{parentName:"li"},"out.txt"),"."),(0,a.yg)("li",{parentName:"ol"},"Write the XORed value onto ",(0,a.yg)("inlineCode",{parentName:"li"},"flag.txt"),"."),(0,a.yg)("li",{parentName:"ol"},"Represent the hex value of the key in ASCII using ",(0,a.yg)("inlineCode",{parentName:"li"},"xxd"),".")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'use rand::{Rng,SeedableRng};\nuse rand::rngs::StdRng;\nuse std::fs;\nuse std::io::Write;\nuse std::io::prelude::*;\n\nfn get_rng() -> StdRng {\n    let seed = 13371337;\n    return StdRng::seed_from_u64(seed);\n}\n\nfn rand_xor(input :&mut [u8]) -> String {\n    let mut rng = get_rng();\n    return input\n        // .chars()\n        .into_iter()\n        .map(|c| format!("{:02x}", (*c ^ rng.gen::<u8>())))\n        .collect::<Vec<String>>()\n        .join("");\n}\n\nfn main() -> std::io::Result<()> {\n    // we now read the file contents into a vector of u8 values\n    let mut file_content = Vec::new();\n    let mut file = fs::File::open("out.txt").expect("Unable to open file");\n    file.read_to_end(&mut file_content).expect("Unable to read");\n    let xored = rand_xor(&mut file_content);\n    println!("{}", xored);\n    let mut file = fs::File::create("flag.txt")?;\n    file.write(xored.as_bytes())?;\n    Ok(())\n}\n')),(0,a.yg)("p",null,"Of course, since this is the first time I had to deal with Rust, I had to install a lot of stuff first. After that, to generate the needed files to build the project, we run:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"cargo init")," in the project folder to generate a templated ",(0,a.yg)("inlineCode",{parentName:"li"},"Cargo.toml")," file."),(0,a.yg)("li",{parentName:"ol"},"Add ",(0,a.yg)("inlineCode",{parentName:"li"},"rand = '*'")," under ",(0,a.yg)("inlineCode",{parentName:"li"},"[dependencies]")," inside ",(0,a.yg)("inlineCode",{parentName:"li"},"Cargo.toml"),"."),(0,a.yg)("li",{parentName:"ol"},"Run ",(0,a.yg)("inlineCode",{parentName:"li"},"cargo build")," to build the project."),(0,a.yg)("li",{parentName:"ol"},"Run it with ",(0,a.yg)("inlineCode",{parentName:"li"},"cargo run"),".")),(0,a.yg)("p",null,"We now have the hex representation of the flag inside our ",(0,a.yg)("inlineCode",{parentName:"p"},"flag.txt")," file, so we can simply run"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"cat flag.txt | xxd -r -ps\n")),(0,a.yg)("p",null,"and we get our flag"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"CHTB{mem0ry_s4f3_crypt0_f41l}\n")),(0,a.yg)(l.A,{mdxType:"DonateCard"}))}y.isMDXComponent=!0},2714:(e,t,n)=>{n.d(t,{A:()=>l});var r=n(6540);const a={"donate-card":"donate-card_mbts",bmac:"bmac_qmhE"};function l(){return r.createElement("div",{className:"alert alert--primary",role:"alert"},r.createElement("div",{className:"card__body"},r.createElement("p",null,"Thank you for reading!"),r.createElement("p",null,"The information in this blog, as well as all the tools, apps and libraries I develop are currently open source."),r.createElement("p",null,"I would love to keep it this way, and you can help!"),r.createElement("p",null,"You can buy me a coffee from here, which will go towards the next all-nighter I pull off!"),r.createElement("a",{href:"https://www.buymeacoffee.com/kblagoev",target:"_blank"},r.createElement("img",{src:"https://cdn.buymeacoffee.com/buttons/v2/default-violet.png",className:a.bmac,alt:"Buy Me A Coffee"})),r.createElement("p",null,"Or you can support me and my code monthly over at ",r.createElement("a",{href:"https://github.com/sponsors/tihawk",target:"_blank"},"Github Sponsors!")),r.createElement("p",null,"Thanks!")))}},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),y=a,d=u["".concat(p,".").concat(y)]||u[y]||g[y]||l;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);