"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6935],{4803:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(4848),i=a(8453);const o={slug:"quantum-programming-abstraction-level-2-algorithms",title:"Quantum Programming - Abstraction level 2: State Machine and Algorithms",description:"After we get an intuition about phase kickback, we start getting into actual Computer Science, through building a State Machine, and recreating an actual Quantum Algorithm.",authors:"kiroki",tags:["Science","Physics","Computing","Quantum","Programming","Computer Science"],toc_min_heading_level:2,toc_max_heading_level:4},r=void 0,l={permalink:"/blog/quantum-programming-abstraction-level-2-algorithms",source:"@site/blog/2021-04-01-20:56:11quantum-programming-abstraction-level-2-algorithms.md",title:"Quantum Programming - Abstraction level 2: State Machine and Algorithms",description:"After we get an intuition about phase kickback, we start getting into actual Computer Science, through building a State Machine, and recreating an actual Quantum Algorithm.",date:"2021-04-01T00:00:00.000Z",formattedDate:"April 1, 2021",tags:[{label:"Science",permalink:"/blog/tags/science"},{label:"Physics",permalink:"/blog/tags/physics"},{label:"Computing",permalink:"/blog/tags/computing"},{label:"Quantum",permalink:"/blog/tags/quantum"},{label:"Programming",permalink:"/blog/tags/programming"},{label:"Computer Science",permalink:"/blog/tags/computer-science"}],readingTime:12.645,hasTruncateMarker:!0,authors:[{name:"Kiril Panayotov Blagoev",title:"Admin",url:"https://github.com/tihawk",imageURL:"https://github.com/tihawk.png",key:"kiroki"}],frontMatter:{slug:"quantum-programming-abstraction-level-2-algorithms",title:"Quantum Programming - Abstraction level 2: State Machine and Algorithms",description:"After we get an intuition about phase kickback, we start getting into actual Computer Science, through building a State Machine, and recreating an actual Quantum Algorithm.",authors:"kiroki",tags:["Science","Physics","Computing","Quantum","Programming","Computer Science"],toc_min_heading_level:2,toc_max_heading_level:4},unlisted:!1,prevItem:{title:"Phasestream 2 - Cyberapocalypse 2021 CTF",permalink:"/blog/phasestream-2-cyberapocalypse-2021-ctf"},nextItem:{title:"Quantum Programming - Abstraction level 1: Logic Gates",permalink:"/blog/quantum-programming-abstraction-level-1-logic-gates"}},s={authorsImageUrls:[void 0]},c=[{value:"Unit circle State machine",id:"unit-circle-state-machine",level:2}];function m(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/blog/quantum-programming-abstraction-level-0/",children:"Quantum Programming by abstracting ourselves from Quantum Mechanics: Abstraction level 0"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/blog/quantum-programming-abstraction-level-1-logic-gates/",children:"Quantum Programming - Abstraction level 1: Logic Gates"})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"/blog/quantum-programming-abstraction-level-2-algorithms/",children:"Quantum Programming - Abstraction level 2: State Machine and Algorithms"})," (this)"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"We have been on quite the adventure so far. Let's recap our progress."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"We've shown that by encoding information onto n qubits in superposition, we can manipulate the whole system of 2n states by only changing the state of one qubit."}),"\n",(0,n.jsx)(t.li,{children:"We represented the state of each qubit as a simple 2D vector."}),"\n",(0,n.jsx)(t.li,{children:"We've established that we can change the state of a single qubit (or two) by applying different logic gates to it, similarly to a classical logic gate."}),"\n",(0,n.jsx)(t.li,{children:"We can now visualise the superposed state of the qubit (indeed of the whole system) on the Bloch sphere."}),"\n",(0,n.jsx)(t.li,{children:"We know how to entangle two qubits, so that their states are correlated."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Now the time has come to start putting it all together. Wouldn't it be nice to actually string some gates together, and see what happens?"}),"\n",(0,n.jsx)(t.p,{children:"Well, in order to see what happens, we might want to be able to visualise the flow of our qubits' states, so we can see how each gate manipulates each qubit at each step."}),"\n",(0,n.jsx)(t.h2,{id:"unit-circle-state-machine",children:"Unit circle State machine"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>l});var n=a(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);