"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5017],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(6540);const u={},s=a.createContext(u);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(u):e.components||u:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},8906:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var a=t(4848),u=t(8453);const s={slug:"queue-java",title:"queue-java",description:"TODO Add description here",authors:"kiroki",tags:["data_structures","java"]},i="queue-java",r={permalink:"/snip/queue-java",source:"@site/snip/queue-java.md",title:"queue-java",description:"TODO Add description here",date:"2025-08-15T11:52:41.000Z",formattedDate:"August 15, 2025",tags:[{label:"data_structures",permalink:"/snip/tags/data-structures"},{label:"java",permalink:"/snip/tags/java"}],hasTruncateMarker:!1,authors:[{name:"Kiril Panayotov Blagoev",title:"Admin",url:"https://github.com/tihawk",imageURL:"https://github.com/tihawk.png",key:"kiroki"}],frontMatter:{slug:"queue-java",title:"queue-java",description:"TODO Add description here",authors:"kiroki",tags:["data_structures","java"]},unlisted:!1,prevItem:{title:"permutation-java",permalink:"/snip/permutation-java"},nextItem:{title:"remove-feff-hidden-chars",permalink:"/snip/remove-feff-hidden-chars"}},o={authorsImageUrls:[void 0]},c=[];function p(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,u.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Date created: 2024-09-27"}),"\n",(0,a.jsx)(n.h1,{id:"queue-in-java",children:"Queue in Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"\nimport java.util.Stack;\n\npublic class Queue {\n  public Stack<Integer> s1 = new Stack<>();\n  public Stack<Integer> s2 = new Stack<>();\n\n  public void enQueue(int num) {\n    // move s1 into s2\n    while (!s1.isEmpty()) {\n      s2.push(s1.pop());\n    }\n\n    s1.push(num);\n\n    // move s2 back into s1\n    while (!s2.isEmpty()) {\n      s1.push(s2.pop());\n    }\n  }\n\n  public int deQueue() {\n    if (s1.isEmpty()) {\n      return -1;\n    }\n\n    int deqEl = s1.peek();\n    s1.pop();\n    return deqEl;\n  }\n\n  public static void testRun() {\n    Queue q = new Queue();\n    q.enQueue(1);\n    q.enQueue(2);\n    q.enQueue(3);\n\n    System.out.println(q.deQueue());\n    System.out.println(q.deQueue());\n    System.out.println(q.deQueue());\n  }\n}\n"})})]})}function l(e={}){const{wrapper:n}={...(0,u.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);